.row-fluid
  .span12
    %h3.page-title
      Pontos distribuidos
    %ul.breadcrumb
      %li
        %i.icon-home
        = link_to 'Dashboard', admin_index_path
        %span.icon-angle-right
      %li
        Pontos distribuidos
= form_tag(admin_points_path, :method => :get) do
  = javascript_include_tag "filters"
  = button_tag '', type: :submit, id: 'filter_submit_bt', class: 'hide'
  .pull-right
    .form-search
      .input-append
        = select(:filter, :establishment_id, Establishment.all.collect{|i| [i.name, i.id]}, { include_blank: "Todos os estabelecimentos", selected: @filter_param[:establishment_id]}, "data-filter-target" => "#filter_submit_bt")
        = link_to admin_points_path, class: 'btn' do
          %i.icofont-remove-sign
          Limpar filtros
  .clearfix

.row-fluid
  .span12
    .widget
      .widget-title
        %h4
          %i.icon-tags
          Pontos distribuidos
        %span.tools
          %a.icon-refresh{:href => "javascript:location.reload();"}
      .widget-body
        %table#sample_1.table.table-striped.table-bordered
          %thead
            %tr
              %th= t('activerecord.attributes.point.id')
              %th= t('activerecord.models.establishment')
              %th= t('activerecord.attributes.user.name')
              %th= t('activerecord.attributes.point.created_at')
              %th= t('activerecord.attributes.point.used')
              %th= t('activerecord.attributes.point.coupon')
              %th= t('activerecord.attributes.point.updated_at')

          %tbody
            - @points.each do |point|

              %tr.odd.gradeX
                %td= point.id
                %td= point.establishment.name
                %td= point.user.name
                %td= l(point.created_at, format: :default)
                - if point.coupon
                  %td= t("simple_form.yes")
                  %td= point.coupon.promotion.description
                  %td= l(point.created_at, format: :default)
                - else
                  %td= t("simple_form.no")
                  %td
                  %td
        = will_paginate @points, :renderer => BootstrapPaginationHelper::LinkRenderer